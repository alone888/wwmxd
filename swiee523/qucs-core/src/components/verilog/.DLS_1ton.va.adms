# 1 "./DLS_1ton.va"













# 1 "disciplines.vams"






# 9 "disciplines.vams"




discipline logic
  domain discrete;
enddiscipline






nature Current
  units = "A";
  access = I;
  idt_nature = Charge;
# 29 "disciplines.vams"
  abstol = 1e-12;

endnature

nature Charge
  units = "coul";
  access = Q;
  ddt_nature = Current;
# 40 "disciplines.vams"
  abstol = 1e-14;

endnature

nature Voltage
  units = "V";
  access = V;
  idt_nature = Flux;
# 51 "disciplines.vams"
  abstol = 1e-6;

endnature

nature Flux
  units = "Wb";
  access = Phi;
  ddt_nature = Voltage;
# 62 "disciplines.vams"
  abstol = 1e-9;

endnature

discipline electrical
  potential Voltage;
  flow Current;
enddiscipline

discipline voltage
  potential Voltage;
enddiscipline
discipline current
  potential Current;
enddiscipline


nature Magneto_Motive_Force
  units = "A*turn";
  access = MMF;
# 85 "disciplines.vams"
  abstol = 1e-12;

endnature

discipline magnetic
  potential Magneto_Motive_Force;
  flow Flux;
enddiscipline


nature Temperature
  units = "K";
  access = Temp;
# 101 "disciplines.vams"
  abstol = 1e-4;

endnature

nature Power
  units = "W";
  access = Pwr;
# 111 "disciplines.vams"
  abstol = 1e-9;

endnature

discipline thermal
  potential Temperature;
  flow Power;
enddiscipline


nature Position
  units = "m";
  access = Pos;
  ddt_nature = Velocity;
# 128 "disciplines.vams"
  abstol = 1e-6;

endnature

nature Velocity
  units = "m/s";
  access = Vel;
  ddt_nature = Acceleration;
  idt_nature = Position;
# 140 "disciplines.vams"
  abstol = 1e-6;

endnature

nature Acceleration
  units = "m/s^2";
  access = Acc;
  ddt_nature = Impulse;
  idt_nature = Velocity;
# 152 "disciplines.vams"
  abstol = 1e-6;

endnature

nature Impulse
  units = "m/s^3";
  access = Imp;
  idt_nature = Acceleration;
# 163 "disciplines.vams"
  abstol = 1e-6;

endnature

nature Force
  units = "N";
  access = F;
# 173 "disciplines.vams"
  abstol = 1e-6;

endnature

discipline kinematic
  potential Position;
  flow Force;
enddiscipline
discipline kinematic_v
  potential Velocity;
  flow Force;
enddiscipline


nature Angle
  units = "rads";
  access = Theta;
  ddt_nature = Angular_Velocity;
# 194 "disciplines.vams"
  abstol = 1e-6;

endnature

nature Angular_Velocity
  units = "rads/s";
  access = Omega;
  ddt_nature = Angular_Acceleration;
  idt_nature = Angle;
# 206 "disciplines.vams"
  abstol = 1e-6;

endnature

nature Angular_Acceleration
  units = "rads/s^2";
  access = Alpha;
  idt_nature = Angular_Velocity;
# 217 "disciplines.vams"
  abstol = 1e-6;

endnature

nature Angular_Force
  units = "N*m";
  access = Tau;
# 227 "disciplines.vams"
  abstol = 1e-6;

endnature

discipline rotational
  potential Angle;
  flow Angular_Force;
enddiscipline
discipline rotational_omega
  potential Angular_Velocity;
  flow Angular_Force;
enddiscipline


# 15 "./DLS_1ton.va"
# 1 "constants.vams"







# 10 "constants.vams"


































# 16 "./DLS_1ton.va"
module DLS_1ton (Lin, Lout); 
 inout Lin, Lout;
 electrical Lin, Lout;
 electrical n1, n2;
 electrical Vout;

 parameter real LEVEL = 5 from [1:inf]  (*info= "voltage level" unit="V"*);
 parameter real Delay = 1e-9 from [0:inf]  (*info="time delay" unit="s"*);

 real Rd, Cd;

 analog begin
  @(initial_model)
    begin
      Rd = 1e3;
      Cd= Delay*1.43/Rd;
    end
 I(n1)      <+ (V(Lin) >= 0.5) ? -LEVEL : 0;
 I(n1)      <+ V(n1);
 I(n1, n2)  <+ V(n1, n2)/Rd;
 I(n2)      <+ ddt(Cd*V(n2));


 I(Lout)    <+ V(Vout);
 I(Vout)    <+ V(Lout) - V(n2);
 end
endmodule
